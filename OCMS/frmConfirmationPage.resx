<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwoGBwcHBg4KBgcHBxYHBwYGCg8ICQcKIBEWIiARFRMY
        HCggGBolGx8fITEhJSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg0NDRoNDxcrGRUdKysrKysrKzcrKysr
        KysrKysrKysrLSsrKysrKysrKysrKysrKysrKysrKystKysrKyv/wAARCADNAPYDASIAAhEBAxEB/8QA
        GAABAQEBAQAAAAAAAAAAAAAAAAMCAQb/xAAWEAEBAQAAAAAAAAAAAAAAAAAAERL/xAAXAQEBAQEAAAAA
        AAAAAAAAAAAAAwEF/8QAFREBAQAAAAAAAAAAAAAAAAAAABH/2gAMAwEAAhEDEQA/APd0qdKrHTUpU6Ug
        pSp0pBSlTpSClKnSkFKVOlIKUqdKQUpU6UgpSp0pBSlTpSClKnSkFKVOlIKUqdKQUpU6UgpSp0pBSidc
        IMUqdKrGKUqdKQUpU6UgpSp0pBSlTpSClKnSkFKVOlIKUqdKQUpU6UgpSp0pBSlTpSClKnSkFKVOlIKU
        qdKQUpU6UgpROhBOlTpVYKUqdKQUpU6UgpSp0pBSlTpSClKnSkFKVOlIKUqdKQUpU6UgpSp0pBSlTpSC
        lKnSkFKVOlIKUqdKQUpU6UgpROhBPRpPRpWCmjSejRBTRpPRogpo0nTRBTRpPRogpo0no0QU0aT0aIKa
        NJ00QU0aT0aIKaNJ6NEFNGk9GiCmjSejRBTRpPRogpo0no0QU0aT0UgpoT0EE9Gk6VWCmjSdKQU0aTpS
        CmjSdKQU0aTpSCmjSdKQU0aTpSCmjSdKQU0aTpSCmjSdKQU0aTpSCmjSdKQU0aTpSCmjSdKQU0aTpSCm
        hOhBOlTpVYKUqdKQUpU6UgpSp0pBSlTpSClKnSkFKVOlIKUqdKQUpU6UgpSp0pBSlTpSClKnSkFKVOlI
        KUqdKQUpU6UgpXUqEE67UqVSClKnSkFKVOlIK1yp0pBSlTpSCtcqdKQUrtSpSClKnSkFKVOlIKUqdKQV
        rlTpSClKnSkFKVOlIK1yp0pBSu1KlIK0SoQY0aT0aVgpo0no0QU0aT0aIKaNJ6NEFNGk9GiCmjSejRBT
        RpPRogpo0no0QU0aT0aIKaNJ6NEFNGk9GiCmjSejRBTRpPRogpo0no0QU0aT0aIKaE9BBPRpPRpWCmjS
        ejRBTRpPRogpo0no0QU0aT0aIKaNJ6NEFNGk9GiCmjSejRBTRpPRogpo0no0QU0aT0aIKaNJ6NEFNGk9
        GiCmjSejRBTRpPRogpoT0EE9Gk6VWMU0aTpSCmjSdKQU0aTpSCmjSdKQU0aTpSCmjSdKQU0aTpSCmjSd
        KQU0VOlIKaNJ0pBTRpOlIKaNJ0pBTRpOlIKaNJ0pBTQnQgnoqdKrBTRU6UgpSp0pBSlTpSClNJ0pBSmk
        6UgpSp0pBSmk6UgpSp0pBTRU6UgpSp0pBTRU6UgpoqdKQUpU6UgpoqdKQU0J0IJ0qejSsFNGk9GiClKn
        o0QUpU9GiClNJ6NEFNFT0aIKU0no0QUpU9GiCmjSejRBSlT0aIKUqejRBTRU9GiClNJ6NEFNFT0aIKU0
        no0QU0J6CCejTFKrBvRpilIN6NMUpBvRpilIN6NMUpBvRpilIN6NMUpBvRpilIN6NMUpBvRpilIN6NMU
        pBvRpilIN6NMUpBvRpilIN6NMUpBvQxQg//Z
</value>
  </data>
</root>